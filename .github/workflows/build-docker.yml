name: Build with Docker

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout kernel source
      uses: actions/checkout@v3

#    - name: Checkout toolchain
 #     uses: actions/checkout@v3
  #    with:
   #     repository: kdrag0n/proton-clang
    #    path: proton-clang
      
    - name: Docker Run Action
      uses: addnab/docker-run-action@v3
      with:
        image: ubuntu:jammy
        options: -v ${{ github.workspace }}:/src
        run: |
          chmod u+x /src/kernelbuilder.sh
          apt-get update && apt-get install -y sudo
          sudo apt install -y --no-install-recommends git make bc bison openssl
          sudo apt install -y --no-install-recommends curl zip kmod cpio flex libelf-dev libssl-dev libtfm-dev wget
          sudo apt install -y --no-install-recommends device-tree-compiler ca-certificates xz-utils
          ls
          echo "Changing directory to working directory"
          cd src
          ls
          mkdir aosp
          mkdir down
          curl -L https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/main/clang-r498229.tar.gz --output /src/down/aosp.tar.gz
          tar -xf /src/down/aosp.tar.gz -C /src/aosp
          cd /src/aosp
          echo "bruh"
          ls
          cd /src
          ./kernelbuilder.sh
      
    - name: Artifact upload
      uses: actions/upload-artifact@v3.1.2
      with:
        name: output-dir
        path: ${{ github.workspace }}/Arcturus-*.zip
        if-no-files-found: ignore
